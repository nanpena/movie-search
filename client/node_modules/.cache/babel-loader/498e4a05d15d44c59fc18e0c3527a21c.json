{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nanpena/codeStudio/movie-search/src/components/Popup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nexport default function Popup({\n  selected\n}) {\n  _s();\n\n  console.log('popup function', selected);\n  const [movieID, setMovieID] = useState(selected.imdbID);\n  const [currentMovie, setCurrentMovie] = useState({});\n  console.log('id by state', movieID);\n  const url = `https://movie-database-imdb-alternative.p.rapidapi.com/?i=${movieID}&r=json`;\n\n  try {\n    //    const res = await fetch(url)\n    fetch(url, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-key\": \"dcc87032famshc1b79ddcc901dc4p140abfjsn05b22a78edfd\",\n        \"x-rapidapi-host\": \"movie-database-imdb-alternative.p.rapidapi.com\"\n      }\n    }).then(res => {\n      console.log('resssssss', res);\n    }); //    const data = await res.json();\n    //    console.log('return data', data)\n    //    setCurrentMovie(data.Search)\n  } catch (err) {\n    console.error(err);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Movie By Id \", selected.Title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Release Date : \", selected.Year]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: selected.vote_average\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Popup, \"RWbfXkv4p/ly4Of8SAHgSllCmFo=\");\n\n_c = Popup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Popup\");","map":{"version":3,"sources":["/Users/nanpena/codeStudio/movie-search/src/components/Popup.js"],"names":["React","useState","Popup","selected","console","log","movieID","setMovieID","imdbID","currentMovie","setCurrentMovie","url","fetch","then","res","err","error","Title","Year","vote_average"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,eAAe,SAASC,KAAT,CAAgB;AAACC,EAAAA;AAAD,CAAhB,EAA4B;AAAA;;AACvCC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,QAA9B;AAEA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAACE,QAAQ,CAACK,MAAV,CAAtC;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,EAAD,CAAhD;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BC,OAA3B;AAEA,QAAMK,GAAG,GAAI,6DAA4DL,OAAQ,SAAjF;;AAEG,MAAG;AACF;AACGM,IAAAA,KAAK,CAACD,GAAD,EAAM;AACa,gBAAU,KADvB;AAEa,iBAAW;AACD,0BAAkB,oDADjB;AAED,2BAAmB;AAFlB;AAFxB,KAAN,CAAL,CAMIE,IANJ,CAMSC,GAAG,IAAI;AACZV,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBS,GAAxB;AACH,KARD,EAFD,CAaF;AACA;AACA;AAEA,GAjBD,CAiBC,OAAMC,GAAN,EAAU;AACPX,IAAAA,OAAO,CAACY,KAAR,CAAcD,GAAd;AACH;;AAGJ,sBACI;AAAA,2BACI;AAAA,8BACA;AAAA,mCAAiBZ,QAAQ,CAACc,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA,sCAAoBd,QAAQ,CAACe,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAA,kBAAKf,QAAQ,CAACgB;AAAd;AAAA;AAAA;AAAA;AAAA,cAHA,eAKA;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GA3CuBjB,K;;KAAAA,K","sourcesContent":["import React, {useState} from 'react'\n\nexport default function Popup ({selected}) {\n    console.log('popup function', selected)\n\n    const [movieID, setMovieID] = useState(selected.imdbID)\n    const [currentMovie, setCurrentMovie] = useState({})\n\n    console.log('id by state', movieID)\n\n    const url = `https://movie-database-imdb-alternative.p.rapidapi.com/?i=${movieID}&r=json`  \n   \n       try{\n        //    const res = await fetch(url)\n           fetch(url, {\n                                   \"method\": \"GET\",\n                                   \"headers\": {\n                                             \"x-rapidapi-key\": \"dcc87032famshc1b79ddcc901dc4p140abfjsn05b22a78edfd\",\n                                             \"x-rapidapi-host\": \"movie-database-imdb-alternative.p.rapidapi.com\"\n\n           }}).then(res => {\n               console.log('resssssss',res)\n           })\n           \n           \n        //    const data = await res.json();\n        //    console.log('return data', data)\n        //    setCurrentMovie(data.Search)\n           \n       }catch(err){\n           console.error(err)\n       }\n   \n\n    return (\n        <section>\n            <div> \n            <h1>Movie By Id {selected.Title}</h1>\n            <h3>Release Date : {selected.Year}</h3>\n            <h3>{selected.vote_average}</h3>\n            \n            <button className='close-button'>Close</button>\n            </div>\n        </section>\n    )\n}"]},"metadata":{},"sourceType":"module"}