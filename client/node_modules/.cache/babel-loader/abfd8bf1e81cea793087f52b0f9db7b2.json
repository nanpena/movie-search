{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nanpena/codeStudio/movie-search/client/src/components/SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Popup from './Popup';\n\nfunction SearchBar({\n  openPopup\n}) {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [selected, setSelected] = useState({});\n\n  const searchMovie = async event => {\n    event.preventDefault();\n    console.log('my title is####', title);\n\n    if (title === '') {\n      event.preventDefault();\n      alert('Your search is empty, please enter a movie title');\n    } else {\n      const url = `https://movie-database-imdb-alternative.p.rapidapi.com/?s=${title}&page=1&r=json`;\n\n      try {\n        const res = await fetch(url, {\n          \"method\": \"GET\",\n          \"headers\": {\n            \"x-rapidapi-key\": \"dcc87032famshc1b79ddcc901dc4p140abfjsn05b22a78edfd\",\n            \"x-rapidapi-host\": \"movie-database-imdb-alternative.p.rapidapi.com\"\n          }\n        });\n        const data = await res.json();\n        setMovies(data.Search);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  };\n\n  const displayMovie = async movie => {\n    const url = `https://movie-database-imdb-alternative.p.rapidapi.com/?i=${movie.imdbID}&r=json`;\n\n    try {\n      const res = await fetch(url, {\n        \"method\": \"GET\",\n        \"headers\": {\n          \"x-rapidapi-key\": \"dcc87032famshc1b79ddcc901dc4p140abfjsn05b22a78edfd\",\n          \"x-rapidapi-host\": \"movie-database-imdb-alternative.p.rapidapi.com\"\n        }\n      });\n      const data = await res.json();\n      setSelected(data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  console.log('selected state', selected);\n  console.log('##current movie', movies);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: searchMovie,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        placeholder: \"Enter a movie title (i.e. Harry Potter)\",\n        value: title,\n        onChange: event => setTitle(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        type: \"submit\",\n        children: \" Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), movies === undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sorry\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-icon\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fas fa-times\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 39\n          }, this), \"   \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 10\n        }, this), \"Sorry, the movie you're searching is unavailable\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 10\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-list\",\n      children: movies.filter(movie => movie.Poster).map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-card\",\n        onClick: () => displayMovie(movie),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"movie-img\",\n          src: movie.Poster,\n          alt: `${movie.Title}poster`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"movie-title\",\n          children: movie.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-content\",\n          children: selected.Title === movie.Title ? /*#__PURE__*/_jsxDEV(Popup, {\n            selected: selected\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 48\n          }, this) : false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, movie.imdbID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SearchBar, \"Vgmr5Lg0U+Ci8SeT85//pcgtNc0=\");\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/nanpena/codeStudio/movie-search/client/src/components/SearchBar.js"],"names":["React","useState","Popup","SearchBar","openPopup","title","setTitle","movies","setMovies","selected","setSelected","searchMovie","event","preventDefault","console","log","alert","url","res","fetch","data","json","Search","err","error","displayMovie","movie","imdbID","target","value","undefined","filter","Poster","map","Title"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport Popup from './Popup'\n\n\n\nfunction SearchBar({openPopup}) {\n    \n    const [title, setTitle] = useState('')\n    const [movies, setMovies] = useState([])\n    const [selected, setSelected] = useState({})\n   \n    \n    const searchMovie =  async(event) => {\n        event.preventDefault();   \n\n\n        console.log('my title is####', title)\n        if (title === ''){\n            event.preventDefault();   \n            alert('Your search is empty, please enter a movie title')\n\n        } else {\n\n            const url = `https://movie-database-imdb-alternative.p.rapidapi.com/?s=${title}&page=1&r=json`  \n   \n            try{\n       \n                const res = await fetch(url, {\n                                   \"method\": \"GET\",\n                                   \"headers\": {\n                                     \"x-rapidapi-key\": \"dcc87032famshc1b79ddcc901dc4p140abfjsn05b22a78edfd\",\n                                     \"x-rapidapi-host\": \"movie-database-imdb-alternative.p.rapidapi.com\"\n\n                 }})\n                const data = await res.json();\n                setMovies(data.Search)  \n            }catch(err){\n                 console.error(err)\n             }\n\n        }\n        \n    }\n\n    const displayMovie = async (movie) => {\n\n        const url = `https://movie-database-imdb-alternative.p.rapidapi.com/?i=${movie.imdbID}&r=json` \n\n        try{\n     \n           const res = await fetch(url, {\n                                   \"method\": \"GET\",\n                                   \"headers\": {\n                                     \"x-rapidapi-key\": \"dcc87032famshc1b79ddcc901dc4p140abfjsn05b22a78edfd\",\n                                     \"x-rapidapi-host\": \"movie-database-imdb-alternative.p.rapidapi.com\"\n\n           }})\n           const data = await res.json();\n           setSelected(data)\n           \n       }catch(err){\n           console.error(err)\n       }\n    }\n\n    console.log('selected state',selected)\n    console.log('##current movie', movies)\n\n    \n    \n    \n    return (\n        \n        <>\n        <form className='form' onSubmit={searchMovie}>\n            {/* <label className='label'> </label> */}\n            <input className='input' type='text' placeholder='Enter a movie title (i.e. Harry Potter)'\n                   value={title} onChange={(event)=> setTitle(event.target.value)}\n            />\n            <button className='button' type='submit'> Search</button>\n        </form>\n    \n    \n\n\n    {(movies === undefined) ? \n         <div className='sorry'>\n         \n         <h1> \n         <span className='error-icon'><i class=\"fas fa-times\"></i>   </span>\n        Sorry, the movie you're searching is unavailable</h1> \n         </div> \n\n       : \n\n       <div className='movie-list'> \n       {movies.filter(movie => movie.Poster).map(movie =>\n           \n          <div className='movie-card' key={movie.imdbID} onClick={()=> displayMovie(movie)}>\n         \n          <img className='movie-img'src={movie.Poster} \n                alt={`${movie.Title}poster`}/>  \n          <h2 className='movie-title'>{movie.Title}</h2>\n\n          <div className='movie-content'>\n          {(selected.Title === movie.Title ) ? <Popup selected={selected}/> : false}\n          </div>\n\n         </div>\n   \n       )}\n        \n        </div>}\n\n\n\n\n\n       \n   \n        </>\n\n        \n    )\n}\n\nexport default SearchBar"]},"metadata":{},"sourceType":"module"}