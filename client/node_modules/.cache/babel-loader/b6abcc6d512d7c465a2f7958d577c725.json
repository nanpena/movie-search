{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nanpena/codeStudio/movie-search/client/src/components/SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Popup from './Popup';\n\nfunction SearchBar({\n  openPopup\n}) {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [selected, setSelected] = useState({});\n\n  const searchMovie = async event => {\n    event.preventDefault();\n    const url = `https://movie-database-imdb-alternative.p.rapidapi.com/?s=${title}&page=1&r=json`;\n\n    try {\n      const res = await fetch(url, {\n        \"method\": \"GET\",\n        \"headers\": {\n          \"x-rapidapi-key\": \"dcc87032famshc1b79ddcc901dc4p140abfjsn05b22a78edfd\",\n          \"x-rapidapi-host\": \"movie-database-imdb-alternative.p.rapidapi.com\"\n        }\n      });\n      const data = await res.json();\n      setMovies(data.Search);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const displayMovie = async movie => {\n    const url = `https://movie-database-imdb-alternative.p.rapidapi.com/?i=${movie.imdbID}&r=json`;\n\n    try {\n      const res = await fetch(url, {\n        \"method\": \"GET\",\n        \"headers\": {\n          \"x-rapidapi-key\": \"dcc87032famshc1b79ddcc901dc4p140abfjsn05b22a78edfd\",\n          \"x-rapidapi-host\": \"movie-database-imdb-alternative.p.rapidapi.com\"\n        }\n      });\n      const data = await res.json();\n      setSelected(data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  console.log('selected state', selected);\n  console.log('##current movie', movies);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: searchMovie,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        placeholder: \"i.e. Harry Potter\",\n        value: title,\n        onChange: event => setTitle(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        type: \"submit\",\n        children: \" Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-list\",\n      children: movies.filter(movie => movie.Poster).map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-card\",\n        onClick: () => displayMovie(movie),\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"movie-title\",\n          children: movie.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"movie-img\",\n          src: movie.Poster,\n          alt: `${movie.Title}poster`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Year Release  : \", movie.Year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-content\",\n          children: selected.Title === movie.Title ? /*#__PURE__*/_jsxDEV(Popup, {\n            selected: selected\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 48\n          }, this) : false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, movie.imdbID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SearchBar, \"Vgmr5Lg0U+Ci8SeT85//pcgtNc0=\");\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/nanpena/codeStudio/movie-search/client/src/components/SearchBar.js"],"names":["React","useState","Popup","SearchBar","openPopup","title","setTitle","movies","setMovies","selected","setSelected","searchMovie","event","preventDefault","url","res","fetch","data","json","Search","err","console","error","displayMovie","movie","imdbID","log","target","value","filter","Poster","map","Title","Year"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport Popup from './Popup'\n\n\n\nfunction SearchBar({openPopup}) {\n    \n    const [title, setTitle] = useState('')\n    const [movies, setMovies] = useState([])\n    const [selected, setSelected] = useState({})\n   \n    \n    const searchMovie =  async(event) => {\n        event.preventDefault();   \n        const url = `https://movie-database-imdb-alternative.p.rapidapi.com/?s=${title}&page=1&r=json`  \n   \n       try{\n       \n           const res = await fetch(url, {\n                                   \"method\": \"GET\",\n                                   \"headers\": {\n                                     \"x-rapidapi-key\": \"dcc87032famshc1b79ddcc901dc4p140abfjsn05b22a78edfd\",\n                                     \"x-rapidapi-host\": \"movie-database-imdb-alternative.p.rapidapi.com\"\n\n           }})\n           const data = await res.json();\n           setMovies(data.Search)  \n       }catch(err){\n           console.error(err)\n       }\n    }\n\n    const displayMovie = async (movie) => {\n\n        const url = `https://movie-database-imdb-alternative.p.rapidapi.com/?i=${movie.imdbID}&r=json` \n\n        try{\n     \n           const res = await fetch(url, {\n                                   \"method\": \"GET\",\n                                   \"headers\": {\n                                     \"x-rapidapi-key\": \"dcc87032famshc1b79ddcc901dc4p140abfjsn05b22a78edfd\",\n                                     \"x-rapidapi-host\": \"movie-database-imdb-alternative.p.rapidapi.com\"\n\n           }})\n           const data = await res.json();\n           setSelected(data)\n           \n       }catch(err){\n           console.error(err)\n       }\n    }\n\n    console.log('selected state',selected)\n    console.log('##current movie', movies)\n\n    \n    return (\n        \n        <>\n        <form className='form' onSubmit={searchMovie}>\n            <input className='input' type='text' placeholder='i.e. Harry Potter'\n                   value={title} onChange={(event)=> setTitle(event.target.value)}\n            />\n            <button className='button' type='submit'> Search</button>\n        </form>\n\n        <div className='movie-list'> \n       {movies.filter(movie => movie.Poster).map(movie =>\n           \n          <div className='movie-card' key={movie.imdbID} onClick={()=> displayMovie(movie)}>\n          <h2 className='movie-title'>{movie.Title}</h2>\n          <img className='movie-img'src={movie.Poster} \n                alt={`${movie.Title}poster`}/>  \n          <p>Year Release  : {movie.Year}</p>\n\n\n          <div className='movie-content'>\n          {(selected.Title === movie.Title ) ? <Popup selected={selected}/> : false}\n          </div>\n\n         </div>\n   \n\n\n\n\n\n       )}\n        \n        </div>\n   \n        </>\n\n        \n    )\n}\n\nexport default SearchBar"]},"metadata":{},"sourceType":"module"}