[{"/Users/nanpena/codeStudio/movie-search/client/src/components/SearchBar.js":"1","/Users/nanpena/codeStudio/movie-search/client/src/components/Popup.js":"2","/Users/nanpena/codeStudio/movie-search/client/src/index.js":"3","/Users/nanpena/codeStudio/movie-search/client/src/components/App.js":"4","/Users/nanpena/codeStudio/movie-search/client/src/components/NavBar.js":"5","/Users/nanpena/codeStudio/movie-search/client/src/components/Banner.js":"6"},{"size":3497,"mtime":1607027345778,"results":"7","hashOfConfig":"8"},{"size":1626,"mtime":1607021944377,"results":"9","hashOfConfig":"8"},{"size":347,"mtime":1607023270518,"results":"10","hashOfConfig":"8"},{"size":295,"mtime":1607023342274,"results":"11","hashOfConfig":"8"},{"size":242,"mtime":1607018737587,"results":"12","hashOfConfig":"8"},{"size":458,"mtime":1607019195919,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"p3b4y0",{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/nanpena/codeStudio/movie-search/client/src/components/SearchBar.js",[],"/Users/nanpena/codeStudio/movie-search/client/src/components/Popup.js",["27","28"],"import React from 'react'\nimport Axios from 'axios'\n\nexport default function Popup ({selected}) {\n\n    const voteThumbsUp = async (movie) => {\n        const title = movie.Title\n        const {data} = await Axios.post('./api/movies',{title : title, thumbsUp : true})\n\n    }\n\n    const voteThumbsDown = async (movie) => {\n\n        const title = movie.Title\n        const {data} = await Axios.post('./api/movies',{title : title, ThumbsDown: true})\n\n    }\n\n\n   \n    return (\n        <section>\n\n            <div className='content-bar'>\n                <div>\n                    <p>{selected.Plot}</p>\n                    <p className='bold-letter'>Director : <span>{selected.Director}</span></p>\n                    <p className='bold-letter'>Production : <span> {selected.Production}</span></p>\n                    <p className='bold-letter'>Date Release : <span>{selected.Released} </span></p>\n                    <p className='bold-letter'>  <span className='star'>\n                        <i class=\"fas fa-star\"></i> </span>\n                        Score : \n                        {(selected.Metascore !== 'N/A') ? <span> {selected.Metascore}/100   </span> : <span> N/A   </span>}  \n                        <button className='thumbs-up'movie={selected} onClick={()=> voteThumbsUp(selected)}> <i class=\"fas fa-thumbs-up\"></i> Like </button>\n                        <button className='thumbs-down' movie={selected} onClick={()=> voteThumbsDown(selected)}> <i class=\"fas fa-thumbs-down\">  Unlike</i></button>              \n                    </p>\n                </div>\n            \n            </div>\n        </section>\n    )}","/Users/nanpena/codeStudio/movie-search/client/src/index.js",[],"/Users/nanpena/codeStudio/movie-search/client/src/components/App.js",[],"/Users/nanpena/codeStudio/movie-search/client/src/components/NavBar.js",[],"/Users/nanpena/codeStudio/movie-search/client/src/components/Banner.js",["29"],{"ruleId":"30","severity":1,"message":"31","line":8,"column":16,"nodeType":"32","messageId":"33","endLine":8,"endColumn":20},{"ruleId":"30","severity":1,"message":"31","line":15,"column":16,"nodeType":"32","messageId":"33","endLine":15,"endColumn":20},{"ruleId":"34","severity":1,"message":"35","line":10,"column":22,"nodeType":"36","endLine":10,"endColumn":95},"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]